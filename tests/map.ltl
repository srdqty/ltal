let fun map (g:int->int) (x:int list) : int list =
      case x of
        [] => []
      | h::t => (g h)::(map g t)
  fun tabulate (g:int -> int) (x:int) : int list =
    let fun dotab (y:int) : int list = 
	if x = y then [] else (g y)::(dotab (y + 1))
    in dotab 0 end
  fun square (x:int) :int = x * x 
  fun id (x:int) :int = x
in
 (map square (tabulate id 100))
end
